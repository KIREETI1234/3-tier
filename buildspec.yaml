version: 0.2

env:
  variables:
    ACCOUNT_ID: 216989142685
    REGION: us-east-1
    REPO_NAME: final
    IMAGE_TAG: app

phases:
  install:
    runtime-versions:
      java: corretto17
      docker: 20
    commands:
      - echo Installing dependencies...
      - yum install -y jq maven

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

  build:
    commands:
      - echo Building the JAR...
      - mvn clean package -DskipTests
      - echo Building the Docker image...
      - docker build -t $REPO_NAME:$IMAGE_TAG .
      - docker tag $REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing image to ECR...
      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG
      - echo Preparing Kubernetes manifests...
      - mkdir -p k8s-out
      - sed "s|IMAGE_PLACEHOLDER|$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG|g" k8s/deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/service.yaml k8s-out/service.yaml
      - echo Artifacts ready in k8s-out/

artifacts:
  base-directory: k8s-out
  files:
    - deployment.yaml
    - service.yaml
